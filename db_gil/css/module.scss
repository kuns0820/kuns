@charset "utf-8";

// @ Autor Kuns
// https://github.com/HugoGiraudel/awesome-sass

@mixin reset(){
	html, body, div, span,  iframe, h1, h2, h3, h4, h5, h6, p, a, address, em, img, strong, dl, dt, dd, ol, ul, li, fieldset, form, label, legend, table, caption, tbody, tfoot, thead, tr, th, td, article, aside, canvas, footer, header, hgroup, menu, nav, section, summary, video {margin:0; padding:0; border:0; font-size:100%; vertical-align:middle;}
	article, aside, details, figcaption, figure, footer, header, hgroup, menu, nav, section {display:block;}
	body {font-size:12px; line-height:1.2; font-family:"맑은 고딕", dotum;}
	ol, ul {list-style:none;}
	table {border-collapse:collapse; border-spacing:0;}
	a {color:inherit; font-family:inherit; text-decoration:none; font-weight:normal;
		&:active, &:visited, &:hover{text-decoration:none; outline:none;}
	}
	button {background:none; border:0 none; color:inherit; font-size:inherit; outline:none; cursor:pointer;}
	img {max-width:100%;}
	.blind {@include abs(absolute, top -9999em left -9999em);}
	fieldset {border:0 none !important;}
}


// @ position
// ex)
//	@include abs(absolute, top 0 bottom 0 left 0 right 0 z-index 1);

@mixin position($position, $args: ()) {
	$offsets: top right bottom left z-index;
	position: $position;
	@each $offset in $offsets {
		$index: index($args, $offset);
		@if $index {
			@if $index == length($args) {
				#{$offset}: 0;
			}@else {
				$next: nth($args, $index + 1);
				@if is-valid-length($next) {
					#{$offset}: $next;
			}@else if index($offsets, $next) {
				#{$offset}: 0;
			}@else {
				@warn "Invalid value `#{$next}` for offset `#{$offset}`.";
				}
			}
		}
	}
}
@function is-valid-length($value) {
	@return (type-of($value) == "number" and not unitless($value))
		or (index(auto initial inherit 0, $value) != null);
}
@mixin abs($pos, $args: ()) {
	@include position($pos, $args);
}

@function matches($string, $selectors) {
	$index: str-index($string, "%m");
	@if not $index {
		@warn "No `%m` found in `#{$string}`.";
		@return false;
	}
	$result: ();
	@each $selector in $selectors {
		$fragment: if($index > 2, str-slice($string, 1, $index - 1), "") + $selector + str-slice($string, $index + 2);
		$result: append($result, #{$fragment}, comma);
	}
  @return $result;
}

// @ background
//
@mixin bgUrl($filename,$position:0 0,$repeat: no-repeat) {
	background: url("#{$imgDir}#{$filename}") $position $repeat;
}
@mixin brgb($r,$g,$b,$a) {
	background:rgba($r,$g,$b,$a);
}
@function bgcolor($color, $alpha) {
	@return unquote("rgba(#{red($color)}, #{green($color)}, #{blue($color)}, #{$alpha})");
}
@mixin rgbie($color , $opa:1){
	background:bgcolor($color,$opa);
	$rgba: rgba($color, $opa);
	$ie-hex-str: ie-hex-str($rgba);
	background-color: transparent;
	background-color: $rgba;
	filter:progid:DXImageTransform.Microsoft.gradient(startColorstr=#{$ie-hex-str},endColorstr=#{$ie-hex-str});
	zoom:1;
}

// @ placeholder
//
@mixin placeholder($color){
	::-webkit-input-placeholder {color:$color;}
	::-moz-placeholder {color:$color;}
	:-ms-input-placeholder {color:$color;}
	:-moz-placeholder {color:$color;}
}

// @ over-text
@mixin over-text($width) {
	overflow: hidden;
	text-overflow: ellipsis;
	width: $width;
	white-space: nowrap;
}

// @ CSS3
@mixin css3($property, $value) {
	-webkit-#{$property}: #{$value};
	-moz-#{$property}: #{$value};
	-ms-#{$property}: #{$value};
	-o-#{$property}: #{$value};
	#{$property}: #{$value};
}
@mixin css3_multi($val){
	@include css3(transform , $val);
}
@mixin pos($posValue){
	@include css3(transform , translate + $posValue);
}
@mixin rotate($val){
	@include css3(transform , rotate($val+deg));
}
@mixin origin($val){
	@include css3(transform-origin , $val);
}
@mixin ani_mode($val:both){
	@include css3(animation-fill-mode , $val);
}
@mixin ani($val){
	@include css3(animation , $val);
}
@mixin keyfrm($ani_name) {
	@-webkit-keyframes #{$ani_name} {@content;}
	@-moz-keyframes #{$ani_name} {@content;}
	@-o-keyframes #{$ani_name} {@content;}
	@keyframes #{$ani_name} {@content;}
}

// @ extend
%clearfix {&:after {content:""; display:block; clear:both;}}
%action {@include css3(transition, all 0.15s ease-in-out);}
